{
	"info": {
		"name": "Automated",
		"_postman_id": "93fe23bb-cab4-0f97-da5e-3a9fe1cea818",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Get Access Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"Content-Type is application/json\"] = ",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"}",
							"",
							"var contentAccessControlHeaderExists = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"CORS is *\"] = ",
							"      responseHeaders[\"Access-Control-Allow-Origin\"].has(\"*\");",
							"}",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "grant_type=password&username={{Env-Username}}&password={{Env-Password}}&client_id={{Env-Client}}"
				},
				"url": "{{Env-URL}}/api2/api/token",
				"description": "call to get authoristation token\nneed to try and pull out roleid"
			},
			"response": []
		},
		{
			"name": "Patient Search - not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Error code = 3\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.errorCode).to.eql(3);",
							"    });",
							"",
							"pm.test(\"Error name = NotFound\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.errorName).to.eql(\"NotFound\");",
							"    });",
							"    "
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleId",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{Env-URL}}/api2/api/Patients/Record?primaryId={{Patient1-nhi}}",
					"host": [
						"{{Env-URL}}"
					],
					"path": [
						"api2",
						"api",
						"Patients",
						"Record"
					],
					"query": [
						{
							"key": "primaryId",
							"value": "{{Patient1-nhi}}",
							"equals": true
						}
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create a Patient",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"Patient1-guid\", jsonData.patientGuid);",
							"",
							"pm.test(\"NHI test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.primaryIdentifier).to.eql(pm.environment.get(\"Patient1-nhi\"));",
							"    });",
							"",
							"pm.test(\"Gender test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.gender).to.eql(pm.environment.get(\"Patient1-gender\"));",
							"    });",
							"    ",
							"pm.test(\"Given Name Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.givenName).to.eql(pm.environment.get(\"Patient1-givenName\"));",
							"   });",
							"",
							"pm.test(\"Family Name Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.familyName).to.eql(pm.environment.get(\"Patient1-familyName\"));",
							"    });",
							"    ",
							"    pm.test(\"Title test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.title).to.eql(pm.environment.get(\"Patient1-title\"));",
							"    });",
							"",
							"//@Todo - validate date of birth    ",
							"//pm.test(\"DOB Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"//pm.expect(jsonData.dateofBirth).to.eql(Date.parse(pm.environment.get(\"Patient1-DOB\")));",
							" //  });"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleID",
						"value": "{{Env-currentRoleId}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"givenName\": \"{{Patient1-givenName}}\",\r\n    \"familyName\": \"{{Patient1-familyName}}\",\r\n    \"title\":\"{{Patient1-title}}\",\r\n    \"gender\":\"{{Patient1-gender}}\",\r\n    \"primaryIdentifier\": \"{{Patient1-nhi}}\",\r\n     \"dateOfBirth\":\"{{Patient1-DOB}}\"\r\n} "
				},
				"url": "{{Env-URL}}/api2/api/Patients",
				"description": null
			},
			"response": []
		},
		{
			"name": "Patient Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"Patient1-guid\", jsonData.patientGuid);",
							"",
							"pm.test(\"Guid test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.patientGuid).to.eql(pm.environment.get(\"Patient1-guid\"));",
							"    });",
							"",
							"pm.test(\"Gender test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.gender).to.eql(pm.environment.get(\"Patient1-gender\"));",
							"    });",
							"    ",
							"pm.test(\"Given Name Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.givenName).to.eql(pm.environment.get(\"Patient1-givenName\"));",
							"   });",
							"",
							"pm.test(\"Family Name Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.familyName).to.eql(pm.environment.get(\"Patient1-familyName\"));",
							"    });",
							"",
							"        pm.test(\"Title test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.title).to.eql(pm.environment.get(\"Patient1-title\"));",
							"    });"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleId",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{Env-URL}}/api2/api/Patients/Record?primaryId={{Patient1-nhi}}",
					"host": [
						"{{Env-URL}}"
					],
					"path": [
						"api2",
						"api",
						"Patients",
						"Record"
					],
					"query": [
						{
							"key": "primaryId",
							"value": "{{Patient1-nhi}}"
						}
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Patient Search - simple response",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"Patient1-guid\", jsonData.value.items[0].patientGuid);",
							"",
							"pm.test(\"NHI test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.value.items[0].primaryIdentifier).to.eql(pm.environment.get(\"Patient1-nhi\"));",
							"    });",
							"",
							"//Not doing gender test as response doesn't include gender - bug 14048",
							"//pm.test(\"Gender test\", function(){",
							"    //var jsonData = pm.response.json();",
							"//pm.expect(jsonData.value.items[0].gender).to.eql(pm.environment.get(\"Patient1-gender\"));",
							" //   });",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleId",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{Env-URL}}/api2/api/Patients/?primaryId={{Patient1-nhi}}",
					"host": [
						"{{Env-URL}}"
					],
					"path": [
						"api2",
						"api",
						"Patients",
						""
					],
					"query": [
						{
							"key": "primaryId",
							"value": "{{Patient1-nhi}}"
						}
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Patient1 by GUID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"NHI test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.primaryIdentifier).to.eql(pm.environment.get(\"Patient1-nhi\"));",
							"    });",
							"",
							"pm.test(\"Gender test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.gender).to.eql(pm.environment.get(\"Patient1-gender\"));",
							"    });",
							"    ",
							"pm.test(\"Given Name Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.givenName).to.eql(pm.environment.get(\"Patient1-givenName\"));",
							"   });",
							"",
							"pm.test(\"Family Name Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.familyName).to.eql(pm.environment.get(\"Patient1-familyName\"));",
							"    });",
							"    ",
							"    pm.test(\"Title test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.title).to.eql(pm.environment.get(\"Patient1-title\"));",
							"    });",
							"",
							"//@Todo - validate date of birth    ",
							"//pm.test(\"DOB Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"//pm.expect(jsonData.dateofBirth).to.eql(Date.parse(pm.environment.get(\"Patient1-DOB\")));",
							" //  });",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentroleid",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {},
				"url": "{{Env-URL}}/api2/api/Patients/{{Patient1-guid}}/Record",
				"description": null
			},
			"response": []
		},
		{
			"name": "Update Patient1 - set to Amended",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"NHI test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.primaryIdentifier).to.eql(pm.environment.get(\"Patient1-nhi\"));",
							"    });",
							"",
							"pm.test(\"Gender test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.gender).to.eql(pm.environment.get(\"Amend-Patient1-gender\"));",
							"    });",
							"    ",
							"        pm.test(\"Title test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.title).to.eql(pm.environment.get(\"Amend-Patient1-title\"));",
							"    });",
							"    ",
							"    ",
							"    ",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleID",
						"value": "{{Env-currentRoleId}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n  \"givenName\": \"{{Patient1-givenName}}\",\r\n    \"familyName\": \"{{Patient1-familyName}}\",\r\n    \"title\":\"{{Amend-Patient1-title}}\",\r\n    \"gender\":\"{{Amend-Patient1-gender}}\",\r\n    \"primaryIdentifier\": \"{{Patient1-nhi}}\",\r\n    \"primaryAddress\": null,\r\n    \"primaryContactDetail\": null,\r\n     \"dateOfBirth\":\"{{Amend-Patient1-DOB}}\"\r\n}"
				},
				"url": "{{Env-URL}}/api2/api/Patients/{{Patient1-guid}}",
				"description": null
			},
			"response": []
		},
		{
			"name": "Update Patient1 - reset to original",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"NHI test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.primaryIdentifier).to.eql(pm.environment.get(\"Patient1-nhi\"));",
							"    });",
							"",
							"pm.test(\"Guid test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.patientGuid).to.eql(pm.environment.get(\"Patient1-guid\"));",
							"    });",
							"",
							"pm.test(\"Gender test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.gender).to.eql(pm.environment.get(\"Patient1-gender\"));",
							"    });",
							"    ",
							"pm.test(\"Given Name Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.givenName).to.eql(pm.environment.get(\"Patient1-givenName\"));",
							"   });",
							"",
							"pm.test(\"Family Name Test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.familyName).to.eql(pm.environment.get(\"Patient1-familyName\"));",
							"    });",
							"",
							"        pm.test(\"Title test\", function(){",
							"    //var jsonData = pm.response.json();",
							"pm.expect(jsonData.title).to.eql(pm.environment.get(\"Patient1-title\"));",
							"    });"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleID",
						"value": "{{Env-currentRoleId}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n  \"givenName\": \"{{Patient1-givenName}}\",\r\n    \"familyName\": \"{{Patient1-familyName}}\",\r\n    \"title\":\"{{Patient1-title}}\",\r\n    \"gender\":\"{{Patient1-gender}}\",\r\n    \"primaryIdentifier\": \"{{Patient1-nhi}}\",\r\n    \"primaryAddress\": null,\r\n    \"primaryContactDetail\": null,\r\n     \"dateOfBirth\":\"{{Patient1-DOB}}\"\r\n}"
				},
				"url": "{{Env-URL}}/api2/api/Patients/{{Patient1-guid}}",
				"description": null
			},
			"response": []
		},
		{
			"name": "Enrol a Patient",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Referral Admission\", function(){",
							"   pm.expect(jsonData.referrals[0].programDescription).to.eql(pm.environment.get(\"programme\")); ",
							"   pm.expect(jsonData.referrals[0].referralStatus).to.eql(\"Admission_Admitted\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleID",
						"value": "{{Env-currentRoleId}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"patientguid\": \"{{Patient1-guid}}\",\r\n    \"givenName\": \"{{Patient1-givenName}}\",\r\n    \"familyName\": \"{{Patient1-familyName}}\",\r\n    \"title\":\"{{Patient1-title}}\",\r\n    \"gender\":\"{{Patient1-gender}}\",\r\n    \"primaryIdentifier\": \"{{Patient1-nhi}}\",\r\n     \"dateOfBirth\":\"{{Patient1-DOB}}\",\r\n     \"referrals\": [\r\n    {\r\n      \"programDescription\": \"{{programme}}\"\r\n    }\r\n  ]\r\n}\r\n"
				},
				"url": "{{Env-URL}}/api2/api/Patients/{{Patient1-guid}}/Programmes",
				"description": null
			},
			"response": []
		},
		{
			"name": "Generate OTT (One Time Token)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Remember the access token for subsequent requests",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"onetime_token\", jsonData.token);",
							"",
							"//Status code is 201 or 202",
							"pm.test(\"Get One Time Token is successful\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "grant_type=ccms_onetimetoken&client_id={{Env-Client}}"
				},
				"url": "{{Env-URL}}/api2/api/onetimetoken",
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Care Plan Types - non retired and not service plans",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Personalised Care Plan\", function(){",
							"   pm.expect(jsonData[0].name).to.eql(\"Personalised Care Plan\"); ",
							"  pm.expect(jsonData[0].retired).to.eql(false); ",
							"});",
							"",
							"pm.test(\"Shared Care Plan\", function(){",
							"   pm.expect(jsonData[1].name).to.eql(\"Shared Care Plan\"); ",
							"   pm.expect(jsonData[1].retired).to.eql(false);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentroleID",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{Env-URL}}/api2/api/careplan/Types?includeRetiredTypes=false&isServiceRequestPlan=false",
					"host": [
						"{{Env-URL}}"
					],
					"path": [
						"api2",
						"api",
						"careplan",
						"Types"
					],
					"query": [
						{
							"key": "includeRetiredTypes",
							"value": "false",
							"equals": true
						},
						{
							"key": "isServiceRequestPlan",
							"value": "false",
							"equals": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Patient Search - Tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"Patient2-guid\", jsonData.patientGuid);",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleId",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{Env-URL}}/api2/api/Patients/Record?primaryId={{Patient2-nhi}}",
					"host": [
						"{{Env-URL}}"
					],
					"path": [
						"api2",
						"api",
						"Patients",
						"Record"
					],
					"query": [
						{
							"key": "primaryId",
							"value": "{{Patient2-nhi}}",
							"equals": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Patient Tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e55f9ac-5438-4d36-a4fe-b7869906e037",
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Test Task check\", function(){",
							"    pm.expect(jsonData.items[1].subject).to.eql(\"Test task\"); ",
							"    pm.expect(jsonData.items[1].description).to.eql(\"Comment # 2\"); ",
							"    pm.expect(jsonData.items[1].subject).to.eql(\"Test task\"); ",
							"    pm.expect(jsonData.items[1].status).to.eql(\"Open\"); ",
							"    pm.expect(jsonData.items[1].priority).to.eql(\"Priority 1\"); ",
							"});",
							"",
							"pm.environment.set(\"Patient2-Task1Guid\", jsonData.items[1].originalId);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "curentroleid",
						"value": "1253"
					}
				],
				"body": {},
				"url": {
					"raw": "{{Env-URL}}/api2/api/PatientTasks?patientid={{Patient2-guid}}",
					"host": [
						"{{Env-URL}}"
					],
					"path": [
						"api2",
						"api",
						"PatientTasks"
					],
					"query": [
						{
							"key": "patientid",
							"value": "{{Patient2-guid}}",
							"equals": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b81b4c9-6fab-4af8-850e-e64384801492",
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Test Task check\", function(){",
							"    pm.expect(jsonData.subject).to.eql(\"Test task\"); ",
							"    pm.expect(jsonData.description).to.eql(\"Comment # 2\"); ",
							"    pm.expect(jsonData.subject).to.eql(\"Test task\"); ",
							"    pm.expect(jsonData.status).to.eql(\"Open\"); ",
							"    pm.expect(jsonData.priority).to.eql(\"Priority 1\"); ",
							"});",
							"",
							"pm.test(\"Comment History  check\", function(){",
							"    pm.expect(jsonData.commentHistory[0].user).to.eql(\"ps\"); ",
							"    pm.expect(jsonData.commentHistory[0].comment).to.eql(\"Comment from creation of tasks\"); ",
							"});",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "curentroleid",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {},
				"url": "{{Env-URL}}/api2/api/PatientTasks/{{Patient2-Task1Guid}}"
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"User Check\", function(){",
							"    pm.expect(jsonData.givenName).to.eql(\"SenHouse\"); ",
							"    pm.expect(jsonData.familyName).to.eql(\"Login\"); ",
							"    pm.expect(jsonData.primaryIdentifier).to.eql(\"sho\"); ",
							"    pm.expect(jsonData.userName).to.eql(\"sho\"); ",
							"    pm.expect(jsonData.emailAddress).to.eql(\"SenHouse.Login@ccdhb.org.nz\"); ",
							"    pm.expect(jsonData.isLockedOut).to.eql(false);",
							"    pm.expect(jsonData.isDisabled).to.eql(true);",
							"});",
							"",
							"pm.environment.set(\"Env-UsernameChange-Guid\", jsonData.userGuid);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleID",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {},
				"url": "{{Env-URL}}/api2/api/Users/Summary/{{Env-UsernamePwdChange}}"
			},
			"response": []
		},
		{
			"name": "Get Access Token reset password",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"Content-Type is application/json\"] = ",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"}",
							"",
							"var contentAccessControlHeaderExists = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"CORS is *\"] = ",
							"      responseHeaders[\"Access-Control-Allow-Origin\"].has(\"*\");",
							"}",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token_userpwdchange\", jsonData.access_token);",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "grant_type=password&username={{Env-UsernamePwdChange}}&password={{Env-UsernamePwd}}&client_id={{Env-Client}}"
				},
				"url": "{{Env-URL}}/api2/api/token",
				"description": "call to get authoristation token\nneed to try and pull out roleid"
			},
			"response": []
		},
		{
			"name": "Reset Password to random",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "811f5f16-640e-4ef4-ad47-6c6150947ba2",
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"",
							"pm.environment.set(\"Env-UsernameNewPwd\", responseBody.substring(1,12));"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleID",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {},
				"url": "{{Env-URL}}/api2/api/Users/{{Env-UsernameChange-Guid}}/ResetPassword",
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Access Token changed password",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"Content-Type is application/json\"] = ",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"}",
							"",
							"var contentAccessControlHeaderExists = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"CORS is *\"] = ",
							"      responseHeaders[\"Access-Control-Allow-Origin\"].has(\"*\");",
							"}",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token_userpwdchange\", jsonData.access_token);",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "grant_type=password&username={{Env-UsernamePwdChange}}&password={{Env-UsernameNewPwd}}&client_id={{Env-Client}}"
				},
				"url": "{{Env-URL}}/api2/api/token",
				"description": "call to get authoristation token\nneed to try and pull out roleid"
			},
			"response": []
		},
		{
			"name": "Change password back",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "32477a1a-f948-409f-9c17-2e1447896010",
						"type": "text/javascript",
						"exec": [
							" pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than \"+ pm.environment.get(\"Target-ResponseTime\") +\"ms\" , function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.environment.get(\"Target-ResponseTime\")));",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer {{access_token}}"
					},
					{
						"key": "currentRoleID",
						"value": "{{Env-currentRoleId}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"currentPassword\": \"{{Env-UsernameNewPwd}}\",\n\t\"newPassword\": \"{{Env-UsernamePwd}}\",\n\t\"userId\": \"{{Env-UsernameChange-Guid}}\"\n}"
				},
				"url": "{{Env-URL}}/api2/api/Users/ChangePassword",
				"description": ""
			},
			"response": []
		}
	]
}